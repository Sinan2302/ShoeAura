const express = require('express')
const router = express.Router()
const userController = require('../controllers/user/userController')
const cartController = require('../controllers/user/cartController')
const profileController = require('../controllers/user/profileController')
const userAuth = require('../middleware/userAuth')
const wishlistController = require('../controllers/user/wishlistController')
const userIsBanned = require('../middleware/isUserBanned')
const upload = require('../middleware/multerConfig');  // Import multer configuration


router.get('/search',userController.search)
router.get("/",userController.loadHomepage)
router.get('/banpage',userController.banpage)
router.get('/internalError',userController.internalError)
router.get('/pageNotFound',userController.pageNotFound)
router.get('/auth/google', userController.googleSignin)
router.get('/auth/google/callback',userController.callbackGoogle)
router.get('/signUp',userAuth.isLogin,userController.loadSignup)
router.get('/verifyOtp',userAuth.isLogin,userController.getverifyOtp)
router.get('/userlogin',userAuth.isLogin,userController.loadLogin)
router.get('/Shopping_page',userIsBanned,userController.Shopping_page)
router.get('/product_details/:id',userIsBanned,userController.product_details)
router.get('/category_collection/:categoryId',userIsBanned,userController.category_collection)
router.get('/verifyOtp_forgotPassword',userController.getverifyOtp_forgotPassword)
router.get('/emailverify',userController.emailverify)
router.get('/new_password',userController.new_password)
router.get('/cart',userIsBanned,cartController.cartpage)
router.get('/UserProfile',userIsBanned,profileController.UserProfile)
router.get('/ProfileAddress',userIsBanned,profileController.ProfileAddress)
router.get('/getAddress/:addressId',profileController.getAddress)
router.get('/checkout',cartController.checkout)
router.get('/SuccessOrder',cartController.SuccessOrder)
router.get('/myOrders',profileController.myOrders)
router.get('/download-invoice/:orderId',profileController.downloadInvoice)
router.get('/retry-payment/:orderId',profileController.retryPayment)
router.get('/wishlist',wishlistController.loadWishlist)
router.get('/wallet',userAuth.checkSession,profileController.wallet)
router.get('/referral',userAuth.checkSession,profileController.referral)


router.post('/wallet/create-order',profileController.walletCreateOrder)
router.post('/wallet/verify-payment',profileController.walletAddAmount)
router.post('/AddToWishlist/:productId',wishlistController.addToWishlist)
router.post('/cancelProduct/:orderId/:productId',profileController.cancelProduct)
router.post('/cancelOrder/:orderId',profileController.cancelOrder)
router.post('/returnOrder/:orderId',profileController.returnOrder)
router.post('/returnProduct/:orderId/:productId',profileController.returnProduct)
router.post('/placeOrder',cartController.placeOrder)
router.post('/verifyPayment',cartController.verifyRazorpayPayment)
router.post('/postCart',cartController.postCart)
router.post('/removeCart',cartController.removeCart)
router.post('/updateCart',cartController.updateCart)
router.post('/Addtocart/:id',cartController.Addtocart)
router.post('/postPasswordOtp',profileController.postPasswordOtp)
router.post('/postNewpassword',profileController.postNewpassword)
router.post('/postEmailOtp',profileController.postEmailOtp)
router.post('/editprofileEmail',profileController.editprofileEmail)
router.post('/deleteAddress',profileController.deleteAddress)
router.post('/editAddress/:addressId',profileController.editAddress)
router.post('/addAddress',profileController.addAddress)
router.post('/editprofile',profileController.edit_profile)
router.post('/emailverify',userController.postEmailverify)
router.post('/signUp',userController.signup)
router.post('/verifyOtp',userController.verifyOtp)
router.post('/resendOtp',userController.resendOtp)
router.post('/userlogin',userController.login)
router.post('/verifyOtp_forgotPassword',userController.postverifyOtp_forgotPassword)
router.post('/new_password',userController.post_new_password)
router.post('/logout',userAuth.checkSession,userController.logout)



router.delete('/removeWishlist/:productId',wishlistController.removeFromWishlist)

module.exports = router