<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/admin/dashboard.css">
    <link rel="stylesheet" href="/css/admin/user_management.css" />

    <title>Dashboard</title>
    <link rel="icon" type="image/png" href="/images/shoeAura icon.png">
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <a class="clr" href="/admin/dashboard">Dashboard</a>
            <a href="/admin/usermanagement">User Management</a>
            <a href="/admin/product_management">Products Management</a>
            <a href="/admin/order_management">Order Management</a>
            <a href="/admin/category_management">Category Management</a>
            <a  href="/admin/coupon_management">Coupons Management</a>
            <a href="#">
                <form action="/admin/logout" method="POST">
                    <button type="submit" class="ban-btn btn-danger">Logout</button>
                </form>
            </a>
        </div>

        <div class="main-content">
            <nav class="navbar">
                <a class="navbar-brand"><div id="colorlib-logo"><img class="logo-header" src="/images/new shoeAura.png" alt=""></div></a>
            </nav>
        
           
        
            <div class="report-container">

                <div class="summary-container">
                    <div class="summary-box">
                        <h3>Total Orders</h3><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 -960 960 960" width="36px" fill="#8ef980"><path d="M280-80q-33 0-56.5-23.5T200-160q0-33 23.5-56.5T280-240q33 0 56.5 23.5T360-160q0 33-23.5 56.5T280-80Zm400 0q-33 0-56.5-23.5T600-160q0-33 23.5-56.5T680-240q33 0 56.5 23.5T760-160q0 33-23.5 56.5T680-80ZM246-720l96 200h280l110-200H246Zm-38-80h590q23 0 35 20.5t1 41.5L692-482q-11 20-29.5 31T622-440H324l-44 80h480v80H280q-45 0-68-39.5t-2-78.5l54-98-144-304H40v-80h130l38 80Zm134 280h280-280Z"/></svg>
                        <p><%= typeof totalOrders !== "undefined" ? totalOrders : "Data not available" %></p>
                    </div>
                    <div class="summary-box">
                        <h3>Total Users</h3><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 -960 960 960" width="36px" fill="#8ef980"><path d="M480-480q-66 0-113-47t-47-113q0-66 47-113t113-47q66 0 113 47t47 113q0 66-47 113t-113 47ZM160-160v-112q0-34 17.5-62.5T224-378q62-31 126-46.5T480-440q66 0 130 15.5T736-378q29 15 46.5 43.5T800-272v112H160Zm80-80h480v-32q0-11-5.5-20T700-306q-54-27-109-40.5T480-360q-56 0-111 13.5T260-306q-9 5-14.5 14t-5.5 20v32Zm240-320q33 0 56.5-23.5T560-640q0-33-23.5-56.5T480-720q-33 0-56.5 23.5T400-640q0 33 23.5 56.5T480-560Zm0-80Zm0 400Z"/></svg>
                        <p><%= typeof totalUsers !== "undefined" ? totalUsers : "Data not available" %></p>
                    </div>
                    <div class="summary-box">
                        <h3>Total Revenue </h3><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 -960 960 960" width="36px" fill="#8ef980"><path d="M560-440q-50 0-85-35t-35-85q0-50 35-85t85-35q50 0 85 35t35 85q0 50-35 85t-85 35ZM280-320q-33 0-56.5-23.5T200-400v-320q0-33 23.5-56.5T280-800h560q33 0 56.5 23.5T920-720v320q0 33-23.5 56.5T840-320H280Zm80-80h400q0-33 23.5-56.5T840-480v-160q-33 0-56.5-23.5T760-720H360q0 33-23.5 56.5T280-640v160q33 0 56.5 23.5T360-400Zm440 240H120q-33 0-56.5-23.5T40-240v-440h80v440h680v80ZM280-400v-320 320Z"/></svg>
                        <p>₹<%= typeof totalRevenue !== "undefined" ? totalRevenue.toLocaleString() : "Data not available" %></p>
                    </div>
                    <div class="summary-box">
                        <h3>Total Products</h3><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 -960 960 960" width="36px" fill="#8ef980"><path d="M440-183v-274L200-596v274l240 139Zm80 0 240-139v-274L520-457v274Zm-80 92L160-252q-19-11-29.5-29T120-321v-318q0-22 10.5-40t29.5-29l280-161q19-11 40-11t40 11l280 161q19 11 29.5 29t10.5 40v318q0 22-10.5 40T800-252L520-91q-19 11-40 11t-40-11Zm200-528 77-44-237-137-78 45 238 136Zm-160 93 78-45-237-137-78 45 237 137Z"/></svg>
                        <p><%= typeof totalProducts !== "undefined" ? totalProducts : "Data not available" %></p>
                    </div>
                </div>
                
                    

                <h2>Sales Report</h2>
        
                <label for="filterType" class="filter">Filter By:</label>
                <select id="filterType" class="dropdownOrsize">
                    <option value="daily">Daily</option>
                    <option value="weekly">Weekly</option>
                    <option value="monthly">Monthly</option>
                    <option value="yearly">Yearly</option> 
                </select>

                <!-- Chart and table in one row -->
                <div class="report-content">
                    <div class="sales-chart-container">
                        <canvas id="salesChart"></canvas>
                    </div>
                    <div class="sales-report-table-container">

                        <h2>Recent Orders</h2>

                        <!-- Sales report table -->
                        <table class="sales-report-table" border="1">
                            <thead class="user-table">
                                <tr>
                                    <th>Order ID</th>
                                    <th>Date</th>
                                    <th>Total Amount (₹)</th>
                                    <th>Discount (₹)</th>
                                    <th>Final Amount (₹)</th>
                                    <th>Payment Method</th>
                                    <th>Order Status</th>
                                </tr>
                            </thead>
                            <tbody id="salesReportTable"></tbody>
                        </table>
                        
                    </div>
                </div>
        
                <!-- Pagination -->
                <div id="pagination" class="pagination">
                    <button id="prevPage" class="pagination-btn">Previous</button>
                    <button id="nextPage" class="pagination-btn">Next</button>
                </div>
        
                <!-- Report download buttons -->
                <div class="download-buttons">
                    <label for="reportRange" class="filter">Select Range:</label>
                    <select id="reportRange" class="dropdownOrsize">
                        <option value="24hours">Last 24 Hours</option>
                        <option value="7days">Last 7 Days</option>
                        <option value="31days">Last 31 Days</option>
                        <option value="12months">Last 12 Months</option>
                    </select>
                    <button onclick="downloadExcel()" class="download-btn">Download Excel</button>
                    <button onclick="downloadPDF()" class="download-btn">Download PDF</button>
                </div>
                
                <div class="top-products-categories-container">
                    <div class="top-products-container">
                        <h2>Top 10 Best-Selling Products</h2>
                        <table class="top-products-table" border="1">
                            <thead>
                                <tr>
                                    <th>Rank</th>
                                    <th>Product Name</th>
                                    <th>Quantity Sold</th>
                                    <th>Total Revenue (₹)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (topProducts && topProducts.length > 0) { %>
                                    <% topProducts.forEach((product, index) => { %>
                                        <tr>
                                            <td><%= index + 1 %></td>
                                            <td><%= product.productName %></td>
                                            <td><%= product.quantitySold %></td>
                                            <td>₹<%= product.totalRevenue.toFixed(2) %></td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="4">No data available</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="top-categories-container">
                        <h2>Top 10 Best-Selling Categories</h2>
                        <table class="top-categories-table" border="1">
                            <thead>
                                <tr>
                                    <th>Rank</th>
                                    <th>Category Name</th>
                                    <th>Quantity Sold</th>
                                    <th>Total Revenue (₹)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (topCategories && topCategories.length > 0) { %>
                                    <% topCategories.forEach((category, index) => { %>
                                        <tr>
                                            <td><%= index + 1 %></td>
                                            <td><%= category.categoryName %></td>
                                            <td><%= category.quantitySold %></td>
                                            <td>₹<%= category.totalRevenue.toFixed(2) %></td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="4">No data available</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="top-brands-container">
                    <h2>Top 10 Best-Selling Brands</h2>
                    <table class="top-brands-table" border="1">
                        <thead>
                            <tr>
                                <th>Rank</th>
                                <th>Brand Name</th>
                                <th>Quantity Sold</th>
                                <th>Total Revenue (₹)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (topBrands && topBrands.length > 0) { %>
                                <% topBrands.forEach((brand, index) => { %>
                                    <tr>
                                        <td><%= index + 1 %></td>
                                        <td><%= brand.brandName %></td>
                                        <td><%= brand.quantitySold %></td>
                                        <td>₹<%= brand.totalRevenue.toFixed(2) %></td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="4">No data available</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                
                
            </div>
        </div>
        
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-financial"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    
<script>


    let currentPage = 1;
    const itemsPerPage = 5;
    let salesChart;

    function changePage(page) {
        currentPage = page;
        fetchSalesReport(); 
    }

    document.getElementById("filterType").addEventListener("change", function () {
        fetchSalesReport();
    });

    async function fetchPaginatedData() {
        let filter = document.getElementById("filterType")?.value;

        try {
            let response = await axios.get(`/admin/report`, {
                params: { filter, page: currentPage, itemsPerPage }
            });

            let tableData = response.data.data.orders;
            updateSalesTable(tableData);
        } catch (error) {
            console.error("Error fetching paginated data:", error);
            alert("Failed to fetch sales data for table. Please try again.");
        }
    }

    async function fetchCompleteData() {
        let filter = document.getElementById("filterType")?.value;

        try {
            let response = await axios.get(`/admin/report`, {
                params: { filter, fetchAll: true }
            });

            let chartData = response.data.data.orders;
            updateSalesChart(chartData, filter);
        } catch (error) {
            console.error("Error fetching complete data:", error);
            alert("Failed to fetch sales data for chart. Please try again.");
        }
    }


    function updateSalesTable(salesData) {
        const tableBody = document.getElementById("salesReportTable");
        tableBody.innerHTML = "";
        
        if (salesData.length === 0) {
            tableBody.innerHTML = "<tr><td colspan='5'>No sales data available</td></tr>";
            return;
        }

        const fragment = document.createDocumentFragment();
        
        salesData.forEach(order => {
    let row = document.createElement("tr");

    // Assign a class based on the payment method
    let paymentClass;
    switch (order.paymentMethod) {
        case 'cod':
            paymentClass = 'payment-cod';
            break;
        case 'Razorpay':
            paymentClass = 'payment-razorpay';
            break;
        case 'PayPal':
            paymentClass = 'payment-paypal';
            break;
        case 'Wallet':
            paymentClass = 'payment-wallet';
            break;
        default:
            paymentClass = 'payment-default';
            break;
    }

    row.innerHTML = `
        <td>${order.orderId}</td>
        <td>${new Date(order.createdAt).toLocaleDateString()}</td>
        <td>₹${order.totalAmount.toFixed(2)}</td>
        <td>₹${order.discountAmount ? order.discountAmount.toFixed(2) : 0}</td>
        <td>₹${(order.totalAmount - (order.discountAmount || 0)).toFixed(2)}</td>
        <td class="${paymentClass}">${order.paymentMethod}</td>
        <td>${order.status}</td>
    `;
    fragment.appendChild(row);
});


        tableBody.appendChild(fragment);
    }

    document.getElementById("filterType").addEventListener("change", function () {
        fetchPaginatedData();
        fetchCompleteData();
    });

    document.getElementById('prevPage').addEventListener('click', function() {
        if (currentPage > 1) {
            currentPage--;
            fetchPaginatedData();
        }
    });

    document.getElementById('nextPage').addEventListener('click', function() {
        currentPage++;
        fetchPaginatedData();
    });

    function updateSalesChart(salesData, filterType) {
        let labels = [];
        let totalAmounts = [];

        if (salesData.length === 0) {
            console.log("No sales data for chart.");
            return;
        }

        if (filterType === "daily") {
            labels = salesData.map(order => new Date(order.createdAt).toLocaleDateString());
            totalAmounts = salesData.map(order => order.totalAmount);
        } else if (filterType === "weekly") {
            let weeklyData = {};
            salesData.forEach(order => {
                let weekStart = new Date(order.createdAt);
                weekStart.setDate(weekStart.getDate() - weekStart.getDay());
                let weekKey = weekStart.toISOString().split("T")[0];

                weeklyData[weekKey] = (weeklyData[weekKey] || 0) + order.totalAmount;
            });

            labels = Object.keys(weeklyData);
            totalAmounts = Object.values(weeklyData);
        } else if (filterType === "monthly") {
            let monthlyData = {};
            salesData.forEach(order => {
                let monthKey = order.createdAt.substring(0, 7); 
                monthlyData[monthKey] = (monthlyData[monthKey] || 0) + order.totalAmount;
            });

            labels = Object.keys(monthlyData);
            totalAmounts = Object.values(monthlyData);
        } else if (filterType === "yearly") {
            let yearlyData = {};
            salesData.forEach(order => {
                let yearKey = order.createdAt.substring(0, 4); 
                yearlyData[yearKey] = (yearlyData[yearKey] || 0) + order.totalAmount;
            });

            labels = Object.keys(yearlyData);
            totalAmounts = Object.values(yearlyData);
        }

        const ctx = document.getElementById("salesChart").getContext("2d");

        if (salesChart) {
            salesChart.destroy();
        }

        salesChart = new Chart(ctx, {
            type: "bar",
            data: {
                labels: labels,
                datasets: [{
                    label: `Total Sales (${filterType})`,
                    data: totalAmounts,
                    backgroundColor: "rgba(76, 168, 88, 0.5)",
                    borderColor: "#fff",
                    borderWidth: 1,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 5,
                    pointBackgroundColor: "#4CA858",
                    pointBorderColor: "#fff"
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        labels: { color: "#4CA858" }
                    },
                    tooltip: {
                        titleColor: "#FFFFFF",
                        bodyColor: "#000000"
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: filterType === "yearly" ? "Year" : (filterType === "monthly" ? "Month" : "Date"),
                            color: "#4CA858"
                        },
                        ticks: { color: "#FFFFFF" },
                        grid: { color: "rgb(169, 169, 169)", lineWidth: 1 }
                    },
                    y: {
                        title: {
                            display: true,
                            text: "Sales Amount (₹)",
                            color: "#fff"
                        },
                        ticks: { color: "#FFFFFF" },
                        grid: { color: "rgb(169, 169, 169)", lineWidth: 1 }
                    }
                }
            }
        });
    }

    function downloadExcel() {
        const reportRange = document.getElementById("reportRange").value;
        window.open(`/admin/download/excel?range=${reportRange}`, "_blank");
    }

    function downloadPDF() {
        const reportRange = document.getElementById("reportRange").value;
        window.open(`/admin/download/pdf?range=${reportRange}`, "_blank");
    }


    fetchPaginatedData();
    fetchCompleteData();

</script>

</body>
<style>
.filter{
    color: #96f1a2;
}
.summary-container {
    display: flex;
    justify-content: space-between;
    gap: 20px;
    margin-bottom: 20px;
    padding: 20px;
}

.summary-box {
    flex: 1;
    background-color: #3a3a3a;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    padding: 20px;
    border-radius: 8px;
    text-align: center;
    color: #96f1a2;
}

.summary-box h3 {
    margin-bottom: 10px;
    font-size: 18px;
    color: #96f1a2;
}

.summary-box p {
    font-size: 24px;
    color: #96f1a2;
}
.sales-chart-container{
    box-shadow: 0 0 10px rgba(0,0,0.2);
    border: 1px solid #4CA858;
    padding: 15px;
}
.sales-report-container{
    box-shadow: 0 0 10px rgba(0,0,0.2);
    border: 1px solid #4CA858;
    padding: 15px;

}
/* Report Container */
.report-container {
    flex-grow: 1;
    padding: 20px;
    background-color: #706d6d;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
}

h2 {
    font-size: 24px;
    margin-bottom: 20px;
    color: #96f1a2;
}

.filter-select, .date-input, .apply-btn {
    margin-bottom: 10px;
    font-size: 14px;
}

.custom-date-filter {
    display: flex;
    gap: 10px;
}

/* Sales Report Table */
.sales-report-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
    background-color: #3a3a3a;
    box-shadow: 0 0 10px #4CA858;
    color: #4CA858;
}

.sales-report-table th, .sales-report-table td {
    padding: 10px;
    text-align: center;
}

.sales-report-table th {
    background-color: #3a3a3a;
}
.sales-report-table td {
    background-color: #2a2a2a;
}

/* Pagination Styles */
.pagination {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.pagination-btn {
    padding: 8px 15px;
    font-size: 14px;
    cursor: pointer;
    background-color: #4CA858;
    color: white;
    border: none;
    border-radius: 5px;
}

.pagination-btn:disabled {
    background-color: #4CA858;
    cursor: not-allowed;
}
/* Download Buttons */
.download-buttons {
    display: flex;
    flex-wrap: wrap; 
    gap: 15px; 
    justify-content: center; 
    align-items: center;
    margin-top: 20px; 
}


.dropdownOrsize{
    margin: 10px;

}
.dropdownOrsize:hover {
    border-color: #28a745; 
}

.download-btn {
    padding: 12px 24px;
    font-size: 16px; 
    background-color: #28a745;
    color: white;
    border: 1px solid transparent;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease; 
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); 
}

.download-btn:hover {
    background-color: #218838;
    border-color: #1e7e34;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); 
    transform: scale(1.05);
}

.download-btn:active {
    transform: scale(1); 
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

@media (max-width: 768px) {
    .download-buttons {
        flex-direction: column; 
        gap: 10px; 
    }

    .download-btn {
        font-size: 14px; 
        padding: 10px 20px;
    }

    .dropdownOrsize {
        font-size: 12px;
        padding: 6px 10px;
    }
}
.payment-cod {
    color: blue;
    font-weight: bold;
}
.payment-razorpay {
    color: rgb(246, 147, 125);
    font-weight: bold;
}
.payment-paypal {
    color: purple;
    font-weight: bold;
}
.payment-wallet {
    color: orange;
    font-weight: bold;
}
.payment-default {
    color: black;
    font-weight: bold;
}
.top-products-categories-container {
    display: flex;
    justify-content: space-between;
    gap: 20px;
}

.top-products-container, .top-categories-container {
    flex: 1; 
    max-width: 48%; 
}

.top-products-table, .top-categories-table {
    width: 100%;
    border-collapse: collapse;
    text-align: left;
    box-shadow: 0 0 10px #4CA858;

}




</style>
</html>
